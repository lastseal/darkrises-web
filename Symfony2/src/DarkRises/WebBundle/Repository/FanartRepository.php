<?php

namespace DarkRises\WebBundle\Repository;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * FanartRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class FanartRepository extends EntityRepository
{
	public function smallGallery($id)
    {
    	$result = $this->getEntityManager()
            ->createQuery('SELECT p FROM DarkRisesWebBundle:Fanart p where p.id < :id order by p.id DESC')
            ->setParameter('id', $id)
            ->setMaxResults(5)
        	->getResult();
    	
    	$result1 = array_reverse($result);
    	
       $result2 = $this->getEntityManager()
            ->createQuery('SELECT p FROM DarkRisesWebBundle:Fanart p where p.id > :id order by p.id ASC')
            ->setParameter('id', $id)
            ->setMaxResults(5)
        	->getResult();
    	
    	$arrayGallery = array();
        foreach(array(0 => $result1, 1 => $result2) as $small){
        	foreach($small as $s){
				$arrayGallery[] = array(
					'path' => "/".$s->getUploadDir()."/".$s->getId().$s->getPath(),
					'dir' => "/".strtolower(str_replace(" ", "",$s->getAutor()))."/".$s->getId()."/"
				);
			}
        }
    	return $arrayGallery;
    }
    
    public function next($id)
    {
       $result = $this->getEntityManager()
            ->createQuery('SELECT p FROM DarkRisesWebBundle:Fanart p where p.id > :id order by p.id ASC')
            ->setParameter('id', $id)
            ->setMaxResults(1)
        	->getResult();
    	
    	if(count($result) == 0)
    		return "nothing";
    	else
    		return "/".strtolower(str_replace(" ", "",$result[0]->getAutor()))."/".$result[0]->getId()."/";
    }
    
    public function prev($id)
    {
       $result = $this->getEntityManager()
            ->createQuery('SELECT p FROM DarkRisesWebBundle:Fanart p where p.id < :id order by p.id DESC')
            ->setParameter('id', $id)
            ->setMaxResults(1)
        	->getResult();
    	
    	if(count($result) == 0)
    		return "nothing";
    	else
    		return "/".strtolower(str_replace(" ", "",$result[0]->getAutor()))."/".$result[0]->getId()."/";
    }
    
    public function count()
    {
    	$result = $this->getEntityManager()
            ->createQuery('SELECT count(p) FROM DarkRisesWebBundle:Fanart p')
            ->getResult();
        
        return $result[0][1];
    }
    
    public function galleryPage($filter, $from, $amount)
    {
    	$dql = "select p FROM DarkRisesWebBundle:Fanart p order by p.".$filter." ASC";
    	
    	$result = $this->getEntityManager()
            ->createQuery($dql)
            ->setFirstResult($from)
            ->setMaxResults($amount)
        	->getResult();
         
        $arrayGallery = array();
		
		foreach($result as $s){
			$arrayGallery[] = array(
				'path' => "/".$s->getUploadDir()."/".$s->getId().$s->getPath(),
				'dir' => "/".strtolower(str_replace(" ", "",$s->getAutor()))."/".$s->getId()."/"
			);
        }
        
        return $arrayGallery;
    }
}